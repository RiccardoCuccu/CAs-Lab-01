


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ********************//**
    2 00000000         ; * @file     startup_LPC17xx.s
    3 00000000         ; * @brief    CMSIS Cortex-M3 Core Device Startup File f
                       or
    4 00000000         ; *           NXP LPC17xx Device Series
    5 00000000         ; * @version  V1.10
    6 00000000         ; * @date     06. April 2011
    7 00000000         ; *
    8 00000000         ; * @note
    9 00000000         ; * Copyright (C) 2009-2011 ARM Limited. All rights rese
                       rved.
   10 00000000         ; *
   11 00000000         ; * @par
   12 00000000         ; * ARM Limited (ARM) is supplying this software for use
                        with Cortex-M
   13 00000000         ; * processor based microcontrollers.  This file can be 
                       freely distributed
   14 00000000         ; * within development tools that are supporting such AR
                       M based processors.
   15 00000000         ; *
   16 00000000         ; * @par
   17 00000000         ; * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, W
                       HETHER EXPRESS, IMPLIED
   18 00000000         ; * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
                        WARRANTIES OF
   19 00000000         ; * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
                        APPLY TO THIS SOFTWARE.
   20 00000000         ; * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR S
                       PECIAL, INCIDENTAL, OR
   21 00000000         ; * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   22 00000000         ; *
   23 00000000         ; ******************************************************
                       ************************/
   24 00000000         
   25 00000000         ; *------- <<< Use Configuration Wizard in Context Menu 
                       >>> ------------------
   26 00000000         
   27 00000000         ; <h> Stack Configuration
   28 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000000         ; </h>
   30 00000000         
   31 00000000 00000200 
                       Stack_Size
                               EQU              0x00000200
   32 00000000         
   33 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   34 00000000         Stack_Mem
                               SPACE            Stack_Size
   35 00000200         __initial_sp
   36 00000200         
   37 00000200         
   38 00000200         ; <h> Heap Configuration
   39 00000200         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   40 00000200         ; </h>
   41 00000200         
   42 00000200 00000000 
                       Heap_Size



ARM Macro Assembler    Page 2 


                               EQU              0x00000000
   43 00000200         
   44 00000200                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   45 00000000         __heap_base
   46 00000000         Heap_Mem
                               SPACE            Heap_Size
   47 00000000         __heap_limit
   48 00000000         
   49 00000000         
   50 00000000                 PRESERVE8
   51 00000000                 THUMB
   52 00000000         
   53 00000000         
   54 00000000         ; Vector Table Mapped to Address 0 at Reset
   55 00000000         
   56 00000000                 AREA             RESET, DATA, READONLY
   57 00000000                 EXPORT           __Vectors
   58 00000000         
   59 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   60 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   61 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   62 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   63 00000010 00000000        DCD              MemManage_Handler 
                                                            ; MPU Fault Handler
                                                            
   64 00000014 00000000        DCD              BusFault_Handler 
                                                            ; Bus Fault Handler
                                                            
   65 00000018 00000000        DCD              UsageFault_Handler ; Usage Faul
                                                            t Handler
   66 0000001C 00000000        DCD              0           ; Reserved
   67 00000020 00000000        DCD              0           ; Reserved
   68 00000024 00000000        DCD              0           ; Reserved
   69 00000028 00000000        DCD              0           ; Reserved
   70 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
   71 00000030 00000000        DCD              DebugMon_Handler ; Debug Monito
                                                            r Handler
   72 00000034 00000000        DCD              0           ; Reserved
   73 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
   74 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
   75 00000040         
   76 00000040         ; External Interrupts
   77 00000040 00000000        DCD              WDT_IRQHandler ; 16: Watchdog T
                                                            imer
   78 00000044 00000000        DCD              TIMER0_IRQHandler ; 17: Timer0
   79 00000048 00000000        DCD              TIMER1_IRQHandler ; 18: Timer1
   80 0000004C 00000000        DCD              TIMER2_IRQHandler ; 19: Timer2
   81 00000050 00000000        DCD              TIMER3_IRQHandler ; 20: Timer3
   82 00000054 00000000        DCD              UART0_IRQHandler ; 21: UART0
   83 00000058 00000000        DCD              UART1_IRQHandler ; 22: UART1
   84 0000005C 00000000        DCD              UART2_IRQHandler ; 23: UART2
   85 00000060 00000000        DCD              UART3_IRQHandler ; 24: UART3
   86 00000064 00000000        DCD              PWM1_IRQHandler ; 25: PWM1



ARM Macro Assembler    Page 3 


   87 00000068 00000000        DCD              I2C0_IRQHandler ; 26: I2C0
   88 0000006C 00000000        DCD              I2C1_IRQHandler ; 27: I2C1
   89 00000070 00000000        DCD              I2C2_IRQHandler ; 28: I2C2
   90 00000074 00000000        DCD              SPI_IRQHandler ; 29: SPI
   91 00000078 00000000        DCD              SSP0_IRQHandler ; 30: SSP0
   92 0000007C 00000000        DCD              SSP1_IRQHandler ; 31: SSP1
   93 00000080 00000000        DCD              PLL0_IRQHandler ; 32: PLL0 Lock
                                                             (Main PLL)
   94 00000084 00000000        DCD              RTC_IRQHandler ; 33: Real Time 
                                                            Clock
   95 00000088 00000000        DCD              EINT0_IRQHandler ; 34: External
                                                             Interrupt 0
   96 0000008C 00000000        DCD              EINT1_IRQHandler ; 35: External
                                                             Interrupt 1
   97 00000090 00000000        DCD              EINT2_IRQHandler ; 36: External
                                                             Interrupt 2
   98 00000094 00000000        DCD              EINT3_IRQHandler ; 37: External
                                                             Interrupt 3
   99 00000098 00000000        DCD              ADC_IRQHandler 
                                                            ; 38: A/D Converter
                                                            
  100 0000009C 00000000        DCD              BOD_IRQHandler ; 39: Brown-Out 
                                                            Detect
  101 000000A0 00000000        DCD              USB_IRQHandler ; 40: USB
  102 000000A4 00000000        DCD              CAN_IRQHandler ; 41: CAN
  103 000000A8 00000000        DCD              DMA_IRQHandler ; 42: General Pu
                                                            rpose DMA
  104 000000AC 00000000        DCD              I2S_IRQHandler ; 43: I2S
  105 000000B0 00000000        DCD              ENET_IRQHandler ; 44: Ethernet
  106 000000B4 00000000        DCD              RIT_IRQHandler ; 45: Repetitive
                                                             Interrupt Timer
  107 000000B8 00000000        DCD              MCPWM_IRQHandler ; 46: Motor Co
                                                            ntrol PWM
  108 000000BC 00000000        DCD              QEI_IRQHandler ; 47: Quadrature
                                                             Encoder Interface
  109 000000C0 00000000        DCD              PLL1_IRQHandler ; 48: PLL1 Lock
                                                             (USB PLL)
  110 000000C4 00000000        DCD              USBActivity_IRQHandler ; 49: US
                                                            B Activity interrup
                                                            t to wakeup
  111 000000C8 00000000        DCD              CANActivity_IRQHandler ; 50: CA
                                                            N Activity interrup
                                                            t to wakeup
  112 000000CC         
  113 000000CC         
  114 000000CC                 IF               :LNOT::DEF:NO_CRP
  115 000000CC                 AREA             |.ARM.__at_0x02FC|, CODE, READO
NLY
  116 00000000 FFFFFFFF 
                       CRP_Key DCD              0xFFFFFFFF
  117 00000004                 ENDIF
  118 00000004         
  119 00000004                 AREA             inputData, DATA, READONLY
  120 00000000 0000001E 
                       N       EQU              0x0000001E  ; 30 elements
  121 00000000 00000004 
                       M       EQU              0x00000004  ; 4 elements
  122 00000000         
  123 00000000        3 



ARM Macro Assembler    Page 4 


                       i       RN               3
  124 00000000        4 
                       middle  RN               4
  125 00000000        5 
                       first   RN               5
  126 00000000        6 
                       last    RN               6
  127 00000000        7 
                       temp_price_list
                               RN               7
  128 00000000        8 
                       temp_item_list
                               RN               8
  129 00000000        9 
                       partial_cost
                               RN               9
  130 00000000        A 
                       total_cost
                               RN               10
  131 00000000        B 
                       value_catalogue
                               RN               11
  132 00000000        C 
                       value_list
                               RN               12
  133 00000000         
  134 00000000 00000004 
              00000014 
              00000006 
              0000000F 
              00000007 
              0000000A 
              0000000A 
              00000005 
              00000010 
              00000008 Price_list
                               DCD              0x004, 20, 0x006, 15, 0x007, 10
, 0x00A, 5, 0x010, 8
  135 00000028 00000012 
              00000007 
              00000016 
              00000016 
              00000017 
              00000011 
              00000018 
              00000026 
              0000001A 
              00000016         DCD              0x012, 7, 0x016, 22, 0x017, 17,
 0x018, 38, 0x01A, 22
  136 00000050 0000001B 
              00000022 
              0000001E 
              0000000B 
              00000022 
              00000003 
              00000023 
              00000009 
              00000025 
              00000028         DCD              0x01B, 34, 0x01E, 11, 0x022, 3,



ARM Macro Assembler    Page 5 


 0x023, 9, 0x025, 40
  137 00000078 00000027 
              0000000C 
              00000028 
              0000000B 
              0000002C 
              0000002D 
              0000002D 
              0000000A 
              00000031 
              00000028         DCD              0x027, 12, 0x028, 11, 0x02C, 45
, 0x02D, 10, 0x031, 40
  138 000000A0 00000033 
              0000002D 
              00000035 
              00000009 
              00000036 
              0000000B 
              00000039 
              0000000C 
              0000003C 
              00000013         DCD              0x033, 45, 0x035, 9, 0x036, 11,
 0x039, 12, 0x03C, 19
  139 000000C8 0000003E 
              00000001 
              00000041 
              00000014 
              00000042 
              0000001E 
              00000045 
              0000000C 
              00000047 
              00000007         DCD              0x03E, 1, 0x041, 20, 0x042, 30,
 0x045, 12, 0x047, 7
  140 000000F0         
  141 000000F0 00000022 
              00000004 
              00000006 
              00000001 
              0000003E 
              0000000A 
              00000017 
              00000002 Item_list
                               DCD              0x022, 4, 0x006, 1, 0x03E, 10, 
0x017, 2 
                                                            ; total cost is 71 
                                                            (0x47)
  142 00000110         
  143 00000110         
  144 00000110                 AREA             |.text|, CODE, READONLY
  145 00000000         
  146 00000000         
  147 00000000         ; Reset Handler
  148 00000000         
  149 00000000         Reset_Handler
                               PROC
  150 00000000                 EXPORT           Reset_Handler             [WEAK
]
  151 00000000         



ARM Macro Assembler    Page 6 


  152 00000000         ; item 1
  153 00000000         ;EXTERN sequentialSearch
  154 00000000                 EXPORT           sequentialSearch
  155 00000000         ;LDR r0, =Price_list
  156 00000000         ;LDR r1, =Item_list
  157 00000000         ;BL sequentialSearch
  158 00000000         
  159 00000000         ; item 2
  160 00000000         ;EXTERN binarySearch
  161 00000000                 EXPORT           binarySearch
  162 00000000         ;LDR r0, =Price_list
  163 00000000         ;LDR r1, =Item_list 
  164 00000000         ;BL binarySearch
  165 00000000         
  166 00000000         ; item 3
  167 00000000                 IMPORT           SystemInit
  168 00000000                 IMPORT           __main
  169 00000000 4840            LDR              R0, =SystemInit
  170 00000002 4780            BLX              R0
  171 00000004 4840            LDR              R0, =__main
  172 00000006 4700            BX               R0
  173 00000008         
  174 00000008 E7FE    stop    B                stop
  175 0000000A                 ENDP
  176 0000000A         
  177 0000000A         ;/******************** Sequential Search ***************
                       *****/
  178 0000000A         
  179 0000000A         sequentialSearch
                               PROC
  180 0000000A B500            PUSH             {LR}
  181 0000000C 4607            MOV              temp_price_list, r0 ; copy the 
                                                            address of Price_li
                                                            st
  182 0000000E 4688            MOV              temp_item_list, r1 ; copy the a
                                                            ddress of Item_list
                                                            
  183 00000010 F04F 0300       MOV              i, #0       ; initialize i
  184 00000014 F04F 0900       MOV              partial_cost, #0 ; initialize p
                                                            artial_cost
  185 00000018 F04F 0A00       MOV              total_cost, #0 ; initialize tot
                                                            al_cost    
  186 0000001C F7FF FFFE       BL               outside_seq_while ; call the ou
                                                            side while
  187 00000020 4650            MOV              r0, total_cost ; store the resu
                                                            lt into r0
  188 00000022 BD00            POP              {PC}
  189 00000024                 ENDP
  190 00000024         
  191 00000024         
  192 00000024         outside_seq_while
                               PROC
  193 00000024 B500            PUSH             {LR}
  194 00000026         new_item_seq
  195 00000026 2B04            CMP              i, #M       ; check if the loop
                                                             has ended
  196 00000028 D009            BEQ              end_outside_seq
  197 0000002A F8D8 C000       LDR              value_list, [temp_item_list] ; 
                                                            load the code of an



ARM Macro Assembler    Page 7 


                                                             item from Item_lis
                                                            t
  198 0000002E F7FF FFFE       BL               inside_seq_while ; call the ins
                                                            ide while
  199 00000032 4607            MOV              temp_price_list, r0 ; reset the
                                                             address of Price_l
                                                            ist
  200 00000034 F108 0808       ADD              temp_item_list, temp_item_list,
 #8 
                                                            ; updates the addre
                                                            ss for the new item
                                                            
  201 00000038 F103 0301       ADD              i, i, #1    ; increment index i
                                                            
  202 0000003C E7F3            B                new_item_seq
  203 0000003E         end_outside_seq
  204 0000003E BD00            POP              {PC}
  205 00000040                 ENDP
  206 00000040         
  207 00000040         
  208 00000040         inside_seq_while
                               PROC
  209 00000040 B500            PUSH             {LR}
  210 00000042         compare_element
  211 00000042 F8D7 B000       LDR              value_catalogue, [temp_price_li
st] 
                                                            ; load the code of 
                                                            an item from Price_
                                                            list
  212 00000046 45E3            CMP              value_catalogue, value_list ; c
                                                            ompare the codes of
                                                             the two elements
  213 00000048 D107            BNE              increment_element
  214 0000004A F8D7 9004       LDR              partial_cost, [temp_price_list,
 #4] 
                                                            ; load the cost of 
                                                            the single item
  215 0000004E F8D8 4004       LDR              r4, [temp_item_list, #4] ; load
                                                             the number of item
                                                            s required
  216 00000052 FB09 F904       MUL              partial_cost, partial_cost, r4 
                                                            ; computes the part
                                                            ial cost
  217 00000056 44CA            ADD              total_cost, total_cost, partial
_cost 
                                                            ; update total cost
                                                            
  218 00000058 E002            B                end_inside_seq
  219 0000005A         increment_element
  220 0000005A F107 0708       ADD              temp_price_list, temp_price_lis
t, #8 
                                                            ; updates the addre
                                                            ss for the new item
                                                            
  221 0000005E E7F0            B                compare_element
  222 00000060         end_inside_seq
  223 00000060 BD00            POP              {PC}
  224 00000062                 ENDP
  225 00000062         



ARM Macro Assembler    Page 8 


  226 00000062         ;/******************** Binary Search *******************
                       */
  227 00000062         
  228 00000062         binarySearch
                               PROC
  229 00000062 B500            PUSH             {LR}
  230 00000064 4607            MOV              temp_price_list, r0 ; copy the 
                                                            address of Price_li
                                                            st
  231 00000066 4688            MOV              temp_item_list, r1 ; copy the a
                                                            ddress of Item_list
                                                            
  232 00000068 F04F 0300       MOV              i, #0       ; initialize i
  233 0000006C F04F 0900       MOV              partial_cost, #0 ; initialize p
                                                            artial_cost
  234 00000070 F04F 0A00       MOV              total_cost, #0 ; initialize tot
                                                            al_cost
  235 00000074 F7FF FFFE       BL               outside_bin_while ; call the ou
                                                            tside while
  236 00000078 4650            MOV              r0, total_cost ; store the resu
                                                            lt into r0
  237 0000007A BD00            POP              {PC}
  238 0000007C                 ENDP
  239 0000007C         
  240 0000007C         
  241 0000007C         outside_bin_while
                               PROC
  242 0000007C B500            PUSH             {LR}
  243 0000007E         new_item_bin
  244 0000007E 2B04            CMP              i, #M       ; check if the loop
                                                             has ended
  245 00000080 D00E            BEQ              end_outside_bin
  246 00000082 F04F 0500       MOV              first, #0   ; reset first to ze
                                                            ro
  247 00000086 F04F 061E       MOV              last, #N    ; reset last to N-1
                                                            
  248 0000008A F1A6 0601       SUB              last, last, #1
  249 0000008E F8D8 C000       LDR              value_list, [temp_item_list] ; 
                                                            load the code of an
                                                             item from Item_lis
                                                            t
  250 00000092 F7FF FFFE       BL               inside_bin_while ; call the ins
                                                            ide while
  251 00000096 F108 0808       ADD              temp_item_list, temp_item_list,
 #8 
                                                            ; updates the addre
                                                            ss for the new item
                                                            
  252 0000009A F103 0301       ADD              i, i, #1    ; increment index i
                                                            
  253 0000009E E7EE            B                new_item_bin
  254 000000A0         end_outside_bin
  255 000000A0 BD00            POP              {PC}
  256 000000A2                 ENDP
  257 000000A2         
  258 000000A2         
  259 000000A2         inside_bin_while
                               PROC
  260 000000A2 B508            PUSH             {r3, LR}



ARM Macro Assembler    Page 9 


  261 000000A4         compare_middle
  262 000000A4 EB05 0406       ADD              middle, first, last ; updates t
                                                            he middle value
  263 000000A8 F04F 0302       MOV              r3, #2      ; middle = (first +
                                                             last) / 2
  264 000000AC FBB4 F4F3       UDIV             middle, middle, r3
  265 000000B0 F04F 0308       MOV              r3, #8      ; convert middle va
                                                            lue to an offset
  266 000000B4 FB04 F303       MUL              r3, middle, r3
  267 000000B8 F850 B003       LDR              value_catalogue, [r0, r3] ; loa
                                                            d the code of an it
                                                            em from Price_list 
                                                               
  268 000000BC 45E3            CMP              value_catalogue, value_list ; c
                                                            ompare the codes of
                                                             the two elements
  269 000000BE D10B            BNE              shift_middle
  270 000000C0 F103 0304       ADD              r3, r3, #4  ; add to the middle
                                                             offset the value #
                                                            4 to extract the co
                                                            st of the single it
                                                            em
  271 000000C4 F850 9003       LDR              partial_cost, [r0, r3] ; load t
                                                            he cost of the sing
                                                            le item
  272 000000C8 F8D8 3004       LDR              r3, [temp_item_list, #4] ; load
                                                             the number of item
                                                            s required
  273 000000CC FB09 F903       MUL              partial_cost, partial_cost, r3 
                                                            ; computes the part
                                                            ial cost
  274 000000D0 44CA            ADD              total_cost, total_cost, partial
_cost 
                                                            ; update total cost
                                                            
  275 000000D2 F04F 0900       MOV              partial_cost, #0 ; reset partia
                                                            l cost
  276 000000D6 E004            B                end_inside_bin
  277 000000D8         shift_middle
  278 000000D8 45E3            CMP              value_catalogue, value_list ; c
                                                            ompare again the co
                                                            des of the two elem
                                                            ents
  279 000000DA BFAC            ITE              GE          ; if-then-else
  280 000000DC 1E66            SUBGE            last, middle, #1 ; if value_cat
                                                            alogue > value_list
                                                             than last = middle
                                                             - 1
  281 000000DE 1C65            ADDLT            first, middle, #1 ; if value_ca
                                                            talogue < value_lis
                                                            t than first = midd
                                                            le + 1
  282 000000E0 E7E0            B                compare_middle
  283 000000E2         end_inside_bin
  284 000000E2 BD08            POP              {r3, PC}
  285 000000E4                 ENDP
  286 000000E4         
  287 000000E4         
  288 000000E4         ; Dummy Exception Handlers (infinite loops which can be 



ARM Macro Assembler    Page 10 


                       modified)
  289 000000E4         
  290 000000E4         NMI_Handler
                               PROC
  291 000000E4                 EXPORT           NMI_Handler               [WEAK
]
  292 000000E4 E7FE            B                .
  293 000000E6                 ENDP
  295 000000E6         HardFault_Handler
                               PROC
  296 000000E6                 EXPORT           HardFault_Handler         [WEAK
]
  297 000000E6 E7FE            B                .
  298 000000E8                 ENDP
  300 000000E8         MemManage_Handler
                               PROC
  301 000000E8                 EXPORT           MemManage_Handler         [WEAK
]
  302 000000E8 E7FE            B                .
  303 000000EA                 ENDP
  305 000000EA         BusFault_Handler
                               PROC
  306 000000EA                 EXPORT           BusFault_Handler          [WEAK
]
  307 000000EA E7FE            B                .
  308 000000EC                 ENDP
  310 000000EC         UsageFault_Handler
                               PROC
  311 000000EC                 EXPORT           UsageFault_Handler        [WEAK
]
  312 000000EC E7FE            B                .
  313 000000EE                 ENDP
  314 000000EE         SVC_Handler
                               PROC
  315 000000EE                 EXPORT           SVC_Handler               [WEAK
]
  316 000000EE E7FE            B                .
  317 000000F0                 ENDP
  319 000000F0         DebugMon_Handler
                               PROC
  320 000000F0                 EXPORT           DebugMon_Handler          [WEAK
]
  321 000000F0 E7FE            B                .
  322 000000F2                 ENDP
  323 000000F2         PendSV_Handler
                               PROC
  324 000000F2                 EXPORT           PendSV_Handler            [WEAK
]
  325 000000F2 E7FE            B                .
  326 000000F4                 ENDP
  327 000000F4         SysTick_Handler
                               PROC
  328 000000F4                 EXPORT           SysTick_Handler           [WEAK
]
  329 000000F4 E7FE            B                .
  330 000000F6                 ENDP
  331 000000F6         
  332 000000F6         Default_Handler
                               PROC



ARM Macro Assembler    Page 11 


  333 000000F6         
  334 000000F6                 EXPORT           WDT_IRQHandler            [WEAK
]
  335 000000F6                 EXPORT           TIMER0_IRQHandler         [WEAK
]
  336 000000F6                 EXPORT           TIMER1_IRQHandler         [WEAK
]
  337 000000F6                 EXPORT           TIMER2_IRQHandler         [WEAK
]
  338 000000F6                 EXPORT           TIMER3_IRQHandler         [WEAK
]
  339 000000F6                 EXPORT           UART0_IRQHandler          [WEAK
]
  340 000000F6                 EXPORT           UART1_IRQHandler          [WEAK
]
  341 000000F6                 EXPORT           UART2_IRQHandler          [WEAK
]
  342 000000F6                 EXPORT           UART3_IRQHandler          [WEAK
]
  343 000000F6                 EXPORT           PWM1_IRQHandler           [WEAK
]
  344 000000F6                 EXPORT           I2C0_IRQHandler           [WEAK
]
  345 000000F6                 EXPORT           I2C1_IRQHandler           [WEAK
]
  346 000000F6                 EXPORT           I2C2_IRQHandler           [WEAK
]
  347 000000F6                 EXPORT           SPI_IRQHandler            [WEAK
]
  348 000000F6                 EXPORT           SSP0_IRQHandler           [WEAK
]
  349 000000F6                 EXPORT           SSP1_IRQHandler           [WEAK
]
  350 000000F6                 EXPORT           PLL0_IRQHandler           [WEAK
]
  351 000000F6                 EXPORT           RTC_IRQHandler            [WEAK
]
  352 000000F6                 EXPORT           EINT0_IRQHandler          [WEAK
]
  353 000000F6                 EXPORT           EINT1_IRQHandler          [WEAK
]
  354 000000F6                 EXPORT           EINT2_IRQHandler          [WEAK
]
  355 000000F6                 EXPORT           EINT3_IRQHandler          [WEAK
]
  356 000000F6                 EXPORT           ADC_IRQHandler            [WEAK
]
  357 000000F6                 EXPORT           BOD_IRQHandler            [WEAK
]
  358 000000F6                 EXPORT           USB_IRQHandler            [WEAK
]
  359 000000F6                 EXPORT           CAN_IRQHandler            [WEAK
]
  360 000000F6                 EXPORT           DMA_IRQHandler            [WEAK
]
  361 000000F6                 EXPORT           I2S_IRQHandler            [WEAK
]
  362 000000F6                 EXPORT           ENET_IRQHandler           [WEAK
]



ARM Macro Assembler    Page 12 


  363 000000F6                 EXPORT           RIT_IRQHandler            [WEAK
]
  364 000000F6                 EXPORT           MCPWM_IRQHandler          [WEAK
]
  365 000000F6                 EXPORT           QEI_IRQHandler            [WEAK
]
  366 000000F6                 EXPORT           PLL1_IRQHandler           [WEAK
]
  367 000000F6                 EXPORT           USBActivity_IRQHandler    [WEAK
]
  368 000000F6                 EXPORT           CANActivity_IRQHandler    [WEAK
]
  369 000000F6         
  370 000000F6         WDT_IRQHandler
  371 000000F6         TIMER0_IRQHandler
  372 000000F6         TIMER1_IRQHandler
  373 000000F6         TIMER2_IRQHandler
  374 000000F6         TIMER3_IRQHandler
  375 000000F6         UART0_IRQHandler
  376 000000F6         UART1_IRQHandler
  377 000000F6         UART2_IRQHandler
  378 000000F6         UART3_IRQHandler
  379 000000F6         PWM1_IRQHandler
  380 000000F6         I2C0_IRQHandler
  381 000000F6         I2C1_IRQHandler
  382 000000F6         I2C2_IRQHandler
  383 000000F6         SPI_IRQHandler
  384 000000F6         SSP0_IRQHandler
  385 000000F6         SSP1_IRQHandler
  386 000000F6         PLL0_IRQHandler
  387 000000F6         RTC_IRQHandler
  388 000000F6         EINT0_IRQHandler
  389 000000F6         EINT1_IRQHandler
  390 000000F6         EINT2_IRQHandler
  391 000000F6         EINT3_IRQHandler
  392 000000F6         ADC_IRQHandler
  393 000000F6         BOD_IRQHandler
  394 000000F6         USB_IRQHandler
  395 000000F6         CAN_IRQHandler
  396 000000F6         DMA_IRQHandler
  397 000000F6         I2S_IRQHandler
  398 000000F6         ENET_IRQHandler
  399 000000F6         RIT_IRQHandler
  400 000000F6         MCPWM_IRQHandler
  401 000000F6         QEI_IRQHandler
  402 000000F6         PLL1_IRQHandler
  403 000000F6         USBActivity_IRQHandler
  404 000000F6         CANActivity_IRQHandler
  405 000000F6         
  406 000000F6 E7FE            B                .
  407 000000F8         
  408 000000F8                 ENDP
  409 000000F8         
  410 000000F8         
  411 000000F8                 ALIGN
  412 000000F8         
  413 000000F8         
  414 000000F8         ; User Initial Stack & Heap
  415 000000F8         



ARM Macro Assembler    Page 13 


  416 000000F8                 IF               :DEF:__MICROLIB
  423 000000F8         
  424 000000F8                 IMPORT           __use_two_region_memory
  425 000000F8                 EXPORT           __user_initial_stackheap
  426 000000F8         __user_initial_stackheap
  427 000000F8         
  428 000000F8 4804            LDR              R0, =  Heap_Mem
  429 000000FA 4905            LDR              R1, =(Stack_Mem + Stack_Size)
  430 000000FC 4A03            LDR              R2, = (Heap_Mem +  Heap_Size)
  431 000000FE 4B05            LDR              R3, = Stack_Mem
  432 00000100 4770            BX               LR
  433 00000102         
  434 00000102 00 00           ALIGN
  435 00000104         
  436 00000104                 ENDIF
  437 00000104         
  438 00000104         
  439 00000104                 END
              00000000 
              00000000 
              00000000 
              00000200 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\startup_lpc17xx.d -o.\objects\startup_lpc17xx.o -I.\RTE\
Device\LPC1768 -I.\RTE\_Target_1 -IC:\Users\Riccardo\AppData\Local\Arm\Packs\AR
M\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Users\Riccardo\AppData\Local\Arm\Packs\Ke
il\LPC1700_DFP\2.6.0\Device\Include --predefine="__EVAL SETA 1" --predefine="__
UVISION_VERSION SETA 529" --predefine="_RTE_ SETA 1" --predefine="LPC175x_6x SE
TA 1" --list=.\listings\startup_lpc17xx.lst RTE\Device\LPC1768\startup_LPC17xx.
s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 33 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 34 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 429 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 431 in file RTE\Device\LPC1768\startup_LPC17xx.s

__initial_sp 00000200

Symbol: __initial_sp
   Definitions
      At line 35 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 59 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 44 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 46 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 428 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 430 in file RTE\Device\LPC1768\startup_LPC17xx.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 45 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 47 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 56 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 59 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 57 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x02FC 00000000

Symbol: .ARM.__at_0x02FC
   Definitions
      At line 115 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: .ARM.__at_0x02FC unused
CRP_Key 00000000

Symbol: CRP_Key
   Definitions
      At line 116 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: CRP_Key unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Item_list 000000F0

Symbol: Item_list
   Definitions
      At line 141 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: Item_list unused
Price_list 00000000

Symbol: Price_list
   Definitions
      At line 134 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: Price_list unused
inputData 00000000

Symbol: inputData
   Definitions
      At line 119 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: inputData unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 144 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: .text unused
ADC_IRQHandler 000000F6

Symbol: ADC_IRQHandler
   Definitions
      At line 392 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 99 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 356 in file RTE\Device\LPC1768\startup_LPC17xx.s

BOD_IRQHandler 000000F6

Symbol: BOD_IRQHandler
   Definitions
      At line 393 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 100 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 357 in file RTE\Device\LPC1768\startup_LPC17xx.s

BusFault_Handler 000000EA

Symbol: BusFault_Handler
   Definitions
      At line 305 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 64 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 306 in file RTE\Device\LPC1768\startup_LPC17xx.s

CANActivity_IRQHandler 000000F6

Symbol: CANActivity_IRQHandler
   Definitions
      At line 404 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 111 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 368 in file RTE\Device\LPC1768\startup_LPC17xx.s

CAN_IRQHandler 000000F6

Symbol: CAN_IRQHandler
   Definitions
      At line 395 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 102 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 359 in file RTE\Device\LPC1768\startup_LPC17xx.s

DMA_IRQHandler 000000F6

Symbol: DMA_IRQHandler
   Definitions
      At line 396 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 103 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 360 in file RTE\Device\LPC1768\startup_LPC17xx.s

DebugMon_Handler 000000F0

Symbol: DebugMon_Handler
   Definitions
      At line 319 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 71 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 320 in file RTE\Device\LPC1768\startup_LPC17xx.s

Default_Handler 000000F6

Symbol: Default_Handler
   Definitions
      At line 332 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: Default_Handler unused
EINT0_IRQHandler 000000F6

Symbol: EINT0_IRQHandler
   Definitions
      At line 388 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 95 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 352 in file RTE\Device\LPC1768\startup_LPC17xx.s

EINT1_IRQHandler 000000F6

Symbol: EINT1_IRQHandler
   Definitions
      At line 389 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 96 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 353 in file RTE\Device\LPC1768\startup_LPC17xx.s

EINT2_IRQHandler 000000F6

Symbol: EINT2_IRQHandler
   Definitions
      At line 390 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 97 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 354 in file RTE\Device\LPC1768\startup_LPC17xx.s

EINT3_IRQHandler 000000F6

Symbol: EINT3_IRQHandler
   Definitions
      At line 391 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 98 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 355 in file RTE\Device\LPC1768\startup_LPC17xx.s

ENET_IRQHandler 000000F6

Symbol: ENET_IRQHandler



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 398 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 105 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 362 in file RTE\Device\LPC1768\startup_LPC17xx.s

HardFault_Handler 000000E6

Symbol: HardFault_Handler
   Definitions
      At line 295 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 62 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 296 in file RTE\Device\LPC1768\startup_LPC17xx.s

I2C0_IRQHandler 000000F6

Symbol: I2C0_IRQHandler
   Definitions
      At line 380 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 87 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 344 in file RTE\Device\LPC1768\startup_LPC17xx.s

I2C1_IRQHandler 000000F6

Symbol: I2C1_IRQHandler
   Definitions
      At line 381 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 88 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 345 in file RTE\Device\LPC1768\startup_LPC17xx.s

I2C2_IRQHandler 000000F6

Symbol: I2C2_IRQHandler
   Definitions
      At line 382 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 89 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 346 in file RTE\Device\LPC1768\startup_LPC17xx.s

I2S_IRQHandler 000000F6

Symbol: I2S_IRQHandler
   Definitions
      At line 397 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 104 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 361 in file RTE\Device\LPC1768\startup_LPC17xx.s

MCPWM_IRQHandler 000000F6

Symbol: MCPWM_IRQHandler
   Definitions
      At line 400 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 107 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 364 in file RTE\Device\LPC1768\startup_LPC17xx.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


MemManage_Handler 000000E8

Symbol: MemManage_Handler
   Definitions
      At line 300 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 63 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 301 in file RTE\Device\LPC1768\startup_LPC17xx.s

NMI_Handler 000000E4

Symbol: NMI_Handler
   Definitions
      At line 290 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 61 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 291 in file RTE\Device\LPC1768\startup_LPC17xx.s

PLL0_IRQHandler 000000F6

Symbol: PLL0_IRQHandler
   Definitions
      At line 386 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 93 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 350 in file RTE\Device\LPC1768\startup_LPC17xx.s

PLL1_IRQHandler 000000F6

Symbol: PLL1_IRQHandler
   Definitions
      At line 402 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 109 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 366 in file RTE\Device\LPC1768\startup_LPC17xx.s

PWM1_IRQHandler 000000F6

Symbol: PWM1_IRQHandler
   Definitions
      At line 379 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 86 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 343 in file RTE\Device\LPC1768\startup_LPC17xx.s

PendSV_Handler 000000F2

Symbol: PendSV_Handler
   Definitions
      At line 323 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 73 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 324 in file RTE\Device\LPC1768\startup_LPC17xx.s

QEI_IRQHandler 000000F6

Symbol: QEI_IRQHandler
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 401 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 108 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 365 in file RTE\Device\LPC1768\startup_LPC17xx.s

RIT_IRQHandler 000000F6

Symbol: RIT_IRQHandler
   Definitions
      At line 399 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 106 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 363 in file RTE\Device\LPC1768\startup_LPC17xx.s

RTC_IRQHandler 000000F6

Symbol: RTC_IRQHandler
   Definitions
      At line 387 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 94 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 351 in file RTE\Device\LPC1768\startup_LPC17xx.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 149 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 60 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 150 in file RTE\Device\LPC1768\startup_LPC17xx.s

SPI_IRQHandler 000000F6

Symbol: SPI_IRQHandler
   Definitions
      At line 383 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 90 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 347 in file RTE\Device\LPC1768\startup_LPC17xx.s

SSP0_IRQHandler 000000F6

Symbol: SSP0_IRQHandler
   Definitions
      At line 384 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 91 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 348 in file RTE\Device\LPC1768\startup_LPC17xx.s

SSP1_IRQHandler 000000F6

Symbol: SSP1_IRQHandler
   Definitions
      At line 385 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 92 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 349 in file RTE\Device\LPC1768\startup_LPC17xx.s




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

SVC_Handler 000000EE

Symbol: SVC_Handler
   Definitions
      At line 314 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 70 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 315 in file RTE\Device\LPC1768\startup_LPC17xx.s

SysTick_Handler 000000F4

Symbol: SysTick_Handler
   Definitions
      At line 327 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 74 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 328 in file RTE\Device\LPC1768\startup_LPC17xx.s

TIMER0_IRQHandler 000000F6

Symbol: TIMER0_IRQHandler
   Definitions
      At line 371 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 78 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 335 in file RTE\Device\LPC1768\startup_LPC17xx.s

TIMER1_IRQHandler 000000F6

Symbol: TIMER1_IRQHandler
   Definitions
      At line 372 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 79 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 336 in file RTE\Device\LPC1768\startup_LPC17xx.s

TIMER2_IRQHandler 000000F6

Symbol: TIMER2_IRQHandler
   Definitions
      At line 373 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 80 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 337 in file RTE\Device\LPC1768\startup_LPC17xx.s

TIMER3_IRQHandler 000000F6

Symbol: TIMER3_IRQHandler
   Definitions
      At line 374 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 81 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 338 in file RTE\Device\LPC1768\startup_LPC17xx.s

UART0_IRQHandler 000000F6

Symbol: UART0_IRQHandler
   Definitions
      At line 375 in file RTE\Device\LPC1768\startup_LPC17xx.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 82 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 339 in file RTE\Device\LPC1768\startup_LPC17xx.s

UART1_IRQHandler 000000F6

Symbol: UART1_IRQHandler
   Definitions
      At line 376 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 83 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 340 in file RTE\Device\LPC1768\startup_LPC17xx.s

UART2_IRQHandler 000000F6

Symbol: UART2_IRQHandler
   Definitions
      At line 377 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 84 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 341 in file RTE\Device\LPC1768\startup_LPC17xx.s

UART3_IRQHandler 000000F6

Symbol: UART3_IRQHandler
   Definitions
      At line 378 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 85 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 342 in file RTE\Device\LPC1768\startup_LPC17xx.s

USBActivity_IRQHandler 000000F6

Symbol: USBActivity_IRQHandler
   Definitions
      At line 403 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 110 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 367 in file RTE\Device\LPC1768\startup_LPC17xx.s

USB_IRQHandler 000000F6

Symbol: USB_IRQHandler
   Definitions
      At line 394 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 101 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 358 in file RTE\Device\LPC1768\startup_LPC17xx.s

UsageFault_Handler 000000EC

Symbol: UsageFault_Handler
   Definitions
      At line 310 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 65 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 311 in file RTE\Device\LPC1768\startup_LPC17xx.s

WDT_IRQHandler 000000F6



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols


Symbol: WDT_IRQHandler
   Definitions
      At line 370 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 77 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 334 in file RTE\Device\LPC1768\startup_LPC17xx.s

__user_initial_stackheap 000000F8

Symbol: __user_initial_stackheap
   Definitions
      At line 426 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 425 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: __user_initial_stackheap used once
binarySearch 00000062

Symbol: binarySearch
   Definitions
      At line 228 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 161 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: binarySearch used once
compare_element 00000042

Symbol: compare_element
   Definitions
      At line 210 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 221 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: compare_element used once
compare_middle 000000A4

Symbol: compare_middle
   Definitions
      At line 261 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 282 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: compare_middle used once
end_inside_bin 000000E2

Symbol: end_inside_bin
   Definitions
      At line 283 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 276 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: end_inside_bin used once
end_inside_seq 00000060

Symbol: end_inside_seq
   Definitions
      At line 222 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 218 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: end_inside_seq used once
end_outside_bin 000000A0

Symbol: end_outside_bin



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 254 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 245 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: end_outside_bin used once
end_outside_seq 0000003E

Symbol: end_outside_seq
   Definitions
      At line 203 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 196 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: end_outside_seq used once
increment_element 0000005A

Symbol: increment_element
   Definitions
      At line 219 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 213 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: increment_element used once
inside_bin_while 000000A2

Symbol: inside_bin_while
   Definitions
      At line 259 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 250 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: inside_bin_while used once
inside_seq_while 00000040

Symbol: inside_seq_while
   Definitions
      At line 208 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 198 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: inside_seq_while used once
new_item_bin 0000007E

Symbol: new_item_bin
   Definitions
      At line 243 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 253 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: new_item_bin used once
new_item_seq 00000026

Symbol: new_item_seq
   Definitions
      At line 194 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 202 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: new_item_seq used once
outside_bin_while 0000007C

Symbol: outside_bin_while
   Definitions
      At line 241 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Relocatable symbols

      At line 235 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: outside_bin_while used once
outside_seq_while 00000024

Symbol: outside_seq_while
   Definitions
      At line 192 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 186 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: outside_seq_while used once
sequentialSearch 0000000A

Symbol: sequentialSearch
   Definitions
      At line 179 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 154 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: sequentialSearch used once
shift_middle 000000D8

Symbol: shift_middle
   Definitions
      At line 277 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 269 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: shift_middle used once
stop 00000008

Symbol: stop
   Definitions
      At line 174 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 174 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: stop used once
65 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 42 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 46 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 430 in file RTE\Device\LPC1768\startup_LPC17xx.s

M 00000004

Symbol: M
   Definitions
      At line 121 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 195 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 244 in file RTE\Device\LPC1768\startup_LPC17xx.s

N 0000001E

Symbol: N
   Definitions
      At line 120 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 247 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: N used once
Stack_Size 00000200

Symbol: Stack_Size
   Definitions
      At line 31 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 34 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 429 in file RTE\Device\LPC1768\startup_LPC17xx.s

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SystemInit 00000000

Symbol: SystemInit
   Definitions
      At line 167 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 169 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: SystemInit used once
__main 00000000

Symbol: __main
   Definitions
      At line 168 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 171 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 424 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: __use_two_region_memory unused
3 symbols
436 symbols in table
